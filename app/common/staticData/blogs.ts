export const blogs = [
  {
    slug: "load-error-states-tanstack-query",
    title: "Efficient use of loading and error states using Tanstack Query",
    date: "January 2024",
    description: [
      "As I am open to work and actively applying to jobs and performing job tasks, I am taking a challenge of doing something new in every of these projects in the pursuit of learning something unique.",
      "This is a recent project I did for a job application. It's called Bookling 📚 !",
      ".",
      ".",
      "💪 What did I learn?",
      "📌 Framer Motion",
      "📌 Improved architecture to maintain API services.",
      ".",
      ".",
      "🆕 What's unique?",
      "📌 The Bento-Grid inspired Hero Section! As a designer too, I came up with this uniquely crafted layout in the hero section which speaks to the user a lot.",
      "📌 An error handling approach I talked about earlier! This won't break the application or disrupt any form of User Experience.",
      "👉 If you visit the app, you will see all the dynamic list items won't appear as now the API is facing an Internal Server Error (500). This is because I used MockBin, a tool to generate Mock APIs. APIs generated by MockBin has an expiry date. So, if you go though the following sections",
      "✅ Landing Page -> Top Authors, Best Sellers",
      "✅ Find Books Page",
      "🤖 You will see the data is loading, and then a meaningful message is shown, instead of the UI/page/app breaking.",
      "💣 Loading Skeletons! Just look at how beautiful the whole app looks, even though, the backend is compromised! 😉",
    ],
    image: "/blogs/1.png",
    client_code_link: "",
    server_code_link: "",
    live_link: "https://bookling-nextjs.vercel.app/",
  },
  {
    slug: "top-approaches-frontend-engineering",
    title: "Top 5 approaches to Frontend Engineering",
    date: "January 2024",
    description: [
      "1. Always start with a sketch/ diagram/ doodle outlining the following for any feature.",
      "- System Design -> Breakdown components (server and client), static components, dynamic components, data flow, API call in which component to make sure loading and error states don't break.",
      ".",
      ".",
      "How will this help?",
      "~ In a long project with a team, someone else might need to debug your feature. Your very structured plan will be a life saver.",
      ".",
      ".",
      "2. Chrome Dev Tools' Network Tab is your best friend.",
      ".",
      ".",
      "3. While the static development phase of converting Figma designs, always make sure the backend is aware of the appropriate fields in a design flow, to avoid missing fields.",
      ".",
      ".",
      "4. Always maintain loading and error states, so that when backend is undergoing development, the frontend doesn't break. Add meaningful UIs for the user to understand. We all have seen facebook, linkedin, twitter go down. It should be as easy for the user of your application as it is for us to understand.",
      ".",
      ".",
      "5. As a frontend developer, you should start getting familiar with data structures right now!!!",
      ".",
      ".",
      "~ The backend might often give you objects in the data, but often times for backend developers who don't know the frontend, it is on us to make sure that they are giving us the right data structure to ensure smooth coding, and optimized performance.",
    ],
    image: "/blogs/2.png",
    client_code_link: "",
    server_code_link: "",
    live_link: "https://bookling-nextjs.vercel.app/",
  },
  {
    slug: "2023-rewind",
    title: "Looking back at 2023",
    date: "January 2024",
    description: [
      "👯 Met some amazing colleagues.",
      "📈 Got to experience Agile Methodologies with well maintained Sprints, Scrum meetings, and poker sessions.",
      "▶ Learned to plan efficient sprints based on requirement analysis.",
      "⚠ Absorbed and trying to establish that there can be as much components as possible instead of breaking rendering having everything in one component.",
      "✅ Learned the importance and benefits of breaking down designs into well-defined, organized and structured flows to ensure smooth frontend development.",
      "✅ Learned to be feasible with Tailwind CSS and avoid unnecessary styles.",
      "✅ Maintaining layouts within web applications has never been better without Next 13+.",
      "✅ Started learning Typescript and MOBX.",
      "✅ Started learning Mongoose and brushed up Express JS and MongoDB.",
      "✅ Mastered responsiveness and the thought process.",
      "🔄 Learnt the most important set of communication which is to maintain a sync on the data structure according to Figma and pass it over to the backend developers who are weak in design, eventually suppressing missing fields in APIs.",
      "📌 Applying DRY approaches is a textbook in my mind now.",
      "📌 Learned to apply SOLID principles efficiently in frontend development.",
      "✔ Maintaining reusable components using clsx, tw-merge, and class-variance-authority is an addiction for me now.",
      "📌 Practice of always making a doodle of components, data flow, data structure, routing, and API endpoints are the best thing to always start with.",
      "📌 Learned an efficient design pattern to divide API services, utilities, repeated styles and components.",
      "✔ Starting to get more comfortable with Tanstack Query, Formik and YUP.",
      "✅ Learned to maintain well structured forms with proper validation using reusable input field components.",
      "✅ Learned conditional form validation using YUP, when a certain input field is dependent on another.",
      "✅ Learned to efficiently work on multiple Github branches in the fastest way.",
      "✅ Testing is a MUST!",
      "✅ Debugging is now much easier.",
      "📌 Maintaining documentation should always be a priority for team mates, new comers, and most importantly self.",
      "💪 Got the power of mentorship at an early age, and owned it.",
      "📌 Learned and maintained balance within team members ❗❗❗",
      "📌 Weekly code review sessions and parallel refactoring within Sprints ❗❗❗",
      "✅ Started getting comfortable with MVC.",
      "🔥📌 Established the fact that a team is a team only when everyone is a team player. If anything goes wrong, the blame goes to everyone.",
      "🔥💪 Gained the superpower to code stunning UIs without a design.",
      "🔥💪 Am delighted to be the team leader of two production-grade projects.",
      "🔥📌 Established a sweet approach to handling errors whenever the backend is compromised.",
      "🔥💪 I type at 85 WPM (default) 😱 ",
      "❌ Got extremely dependent on Next JS and Tailwind CSS sacrificing the roots of React JS and Vanilla CSS in the process.",
      "❌ Procrastinated a lot.",
      "❌ Feared Redux for a while.",
      ".",
      ".",
      "~ 2024",
      "📌 ExpressJS, MongoDB, Mongoose, PostgreSQL",
      "📌 Typescript, VueJS, Redux, ThreeJS, GSAP",
    ],
    image: "/blogs/3.png",
    client_code_link: "",
    server_code_link: "",
    live_link: "https://bookling-nextjs.vercel.app/",
  },
];
